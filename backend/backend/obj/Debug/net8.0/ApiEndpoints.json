[
  {
    "ContainingType": "backend.Controllers.AvailabilityController",
    "Method": "AddAvailability",
    "RelativePath": "api/availability",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "availability",
        "Type": "backend.Models.ProfessionalAvailability",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AvailabilityController",
    "Method": "GetById",
    "RelativePath": "api/availability/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AvailabilityController",
    "Method": "UpdateAvailability",
    "RelativePath": "api/availability/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "updatedAvailability",
        "Type": "backend.Models.ProfessionalAvailability",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AvailabilityController",
    "Method": "DeleteAvailability",
    "RelativePath": "api/availability/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AvailabilityController",
    "Method": "GetAvailableSlots",
    "RelativePath": "api/availability/available",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "professionalId",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "date",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AvailabilityController",
    "Method": "GetByProfessionalId",
    "RelativePath": "api/availability/professional/{professionalId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "professionalId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "GetBookings",
    "RelativePath": "api/bookings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "CreateBooking",
    "RelativePath": "api/bookings",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BookingRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "GetBookingById",
    "RelativePath": "api/bookings/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "RescheduleBooking",
    "RelativePath": "api/bookings/{id}/reschedule",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "RescheduleBookingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "UpdateStatus",
    "RelativePath": "api/bookings/{id}/status",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "UpdateStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "GetAvailableSlots",
    "RelativePath": "api/bookings/available-slots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "serviceId",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "date",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "GetProfessionalBookings",
    "RelativePath": "api/bookings/professional/{professionalId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "professionalId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "GetUpcomingBookings",
    "RelativePath": "api/bookings/upcoming/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.BookingController",
    "Method": "GetUserBookings",
    "RelativePath": "api/bookings/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalServiceMappingController",
    "Method": "Assign",
    "RelativePath": "api/professional-services",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Controllers.ServiceAssignmentRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalServiceMappingController",
    "Method": "Unassign",
    "RelativePath": "api/professional-services",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Controllers.ServiceAssignmentRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalController",
    "Method": "GetAllWithServices",
    "RelativePath": "api/professionals",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalController",
    "Method": "CreateWithServices",
    "RelativePath": "api/professionals",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "backend.DTO.CreateProfessionalDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalServiceMappingController",
    "Method": "GetServices",
    "RelativePath": "api/professionals/{id}/services",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalController",
    "Method": "GetAllDetails",
    "RelativePath": "api/professionals/details",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalController",
    "Method": "CreateDetail",
    "RelativePath": "api/professionals/details",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "detail",
        "Type": "backend.Models.ProfessionalDetails",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalController",
    "Method": "UpdateDetail",
    "RelativePath": "api/professionals/details",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "detail",
        "Type": "backend.Models.ProfessionalDetails",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalController",
    "Method": "GetById",
    "RelativePath": "api/professionals/details/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalController",
    "Method": "GetByService",
    "RelativePath": "api/professionals/service/{serviceId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "serviceId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalController",
    "Method": "GetTopBookedProfessionals",
    "RelativePath": "api/professionals/top-booked",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalReviewController",
    "Method": "PostReview",
    "RelativePath": "api/reviews",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CreateProfessionalReviewDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ProfessionalReviewController",
    "Method": "GetReviewForBooking",
    "RelativePath": "api/reviews/booking/{bookingId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookingId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ServiceController",
    "Method": "GetAll",
    "RelativePath": "api/services",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ServiceController",
    "Method": "Create",
    "RelativePath": "api/services",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "service",
        "Type": "backend.Models.Service",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ServiceController",
    "Method": "GetById",
    "RelativePath": "api/services/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ServiceController",
    "Method": "Update",
    "RelativePath": "api/services/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "service",
        "Type": "backend.Models.Service",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ServiceController",
    "Method": "GetCategories",
    "RelativePath": "api/services/categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ServiceController",
    "Method": "GetByCategory",
    "RelativePath": "api/services/category/{category}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "category",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.TestController",
    "Method": "GetAll",
    "RelativePath": "api/test/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/users/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.UserController",
    "Method": "GetUserByEmail",
    "RelativePath": "api/users/email/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.UserController",
    "Method": "RegisterUser",
    "RelativePath": "api/users/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "backend.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]